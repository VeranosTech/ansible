# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018 Ansible, Inc
# This file is distributed under the same license as the Ansible
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Documentation 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-18 15:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/installation_guide/intro_installation.rst:5
msgid "Installation Guide"
msgstr "설치 안내서"

#: ../../rst/installation_guide/intro_installation.rst:7
msgid "Topics"
msgstr "주제"

#: ../../rst/installation_guide/intro_installation.rst:9
msgid "Welcome to the Ansible Installation Guide!"
msgstr "이 문서는 앤서블 설치 안내서입니다."

#: ../../rst/installation_guide/intro_installation.rst:14
msgid "Basics / What Will Be Installed"
msgstr "기초 / 설치해야 하는 것"

#: ../../rst/installation_guide/intro_installation.rst:16
msgid "Ansible by default manages machines over the SSH protocol."
msgstr "앤서블은 기본적으로 SSH 프로토콜을 통해 원격머신을 관리한다."

#: ../../rst/installation_guide/intro_installation.rst:18
msgid ""
"Once Ansible is installed, it will not add a database, and there will be "
"no daemons to start or keep running.  You only need to install it on one "
"machine (which could easily be a laptop) and it can manage an entire "
"fleet of remote machines from that central point.  When Ansible manages "
"remote machines, it does not leave software installed or running on them,"
" so there's no real question about how to upgrade Ansible when moving to "
"a new version."
msgstr ""
"앤서블이 설치된 후 데이터베이스를 추가하거나 데몬을 가동하거나 하는 일은 없다. "
"일단 어떤 컴퓨터(보통은 노트북일 것이다)에 앤서블을 설치하기만 하면 원격에 있는 "
"모든 머신을 관리할 수 있다. 앤서블이 원격 머신을 관리할 때도 거기에 특별한 "
"소프트웨어를 설치하거나 돌리지 않는다. "
"so there's no real question about how to upgrade Ansible when moving to"
"a new version."

#: ../../rst/installation_guide/intro_installation.rst:23
msgid "What Version To Pick?"
msgstr "어떤 버전을 선택해야 하는가?"

#: ../../rst/installation_guide/intro_installation.rst:25
msgid ""
"Because it runs so easily from source and does not require any "
"installation of software on remote machines, many users will actually "
"track the development version."
msgstr ""
"앤서블은 소스코드에서 쉽게 실행되므로 원격 머신에 특별한 소프트웨어를 "
"필요로하지 않는다. 따라서 대부분의 사용자는 개발 버전을 사용한다. "

#: ../../rst/installation_guide/intro_installation.rst:28
msgid ""
"Ansible's release cycles are usually about four months long. Due to this "
"short release cycle, minor bugs will generally be fixed in the next "
"release versus maintaining backports on the stable branch. Major bugs "
"will still have maintenance releases when needed, though these are "
"infrequent."
msgstr ""
"앤서블의 출시주기는 4개월 단위이다. 출시주기가 짧기 때문에 작은 버그는 "
"스테이블 브랜치까지 기다리지 않고 바로 다음 버전에서 고친다. "
"큰 버그는 관리용 출시가 필요하지만 흔치 않다." 

#: ../../rst/installation_guide/intro_installation.rst:32
msgid ""
"If you are wishing to run the latest released version of Ansible and you "
"are running Red Hat Enterprise Linux (TM), CentOS, Fedora, Debian, or "
"Ubuntu, we recommend using the OS package manager."
msgstr ""
"만약 래드헷, 센트OS, 페도라, 데비안, 우분투 등을 쓰면서 최신 버전 앤서블을 "
"원하면 그냥 OS에서 제공하는 패키지 매니저를 사용하면 된다."

#: ../../rst/installation_guide/intro_installation.rst:34
msgid ""
"For other installation options, we recommend installing via \"pip\", "
"which is the Python package manager, though other options are also "
"available."
msgstr ""
"다른 설치 방법으로는 파이썬 기본 패키지 매니저인 \"pip\"\ 를 추천한다. "
"하지만 또 다른 방법도 있다."

#: ../../rst/installation_guide/intro_installation.rst:36
msgid ""
"If you wish to track the development release to use and test the latest "
"features, we will share information about running from source.  It's not "
"necessary to install the program to run from source."
msgstr ""
"만약 최신 기능이 포함된 최신 개발용 버전을 쓰고 싶다면 소스코드에서 바로 실행한다. "
"소스코드를 실행시키기 위해 특별한 소프트웨어를 설치할 필요는 없다. "

#: ../../rst/installation_guide/intro_installation.rst:42
msgid "Control Machine Requirements"
msgstr ""
"제어 머신의 요구사항"

#: ../../rst/installation_guide/intro_installation.rst:44
msgid ""
"Currently Ansible can be run from any machine with Python 2 (version 2.7)"
" or Python 3 (versions 3.5 and higher) installed. Windows isn't supported"
" for the control machine."
msgstr ""
"현재 앤서블은 파이썬 2.7과 3.5 이상이 설치되어 있어야 돌아간다. "
"제어 머신으로 윈도우는 지원하지 않는다."

#: ../../rst/installation_guide/intro_installation.rst:46
msgid "This includes Red Hat, Debian, CentOS, macOS, any of the BSDs, and so on."
msgstr ""
"제어 머신은 레드햇, 데비안(우분투), 센트OS, 맥OS, BDS 등이 가능하다.

#: ../../rst/installation_guide/intro_installation.rst:50
msgid ""
"macOS by default is configured for a small number of file handles, so if "
"you want to use 15 or more forks you'll need to raise the ulimit with "
"``sudo launchctl limit maxfiles unlimited``. This command can also fix "
"any \"Too many open files\" error."
msgstr ""
"맥OS는 디폴트로 파일핸들 제한이 있기 때문에 15개 이상을 동시 실행하고 "
"싶으면 ``sudo launchctl limit maxfiles unlimited`` 명령으로 ulimit를 올려야 한다. "
"이렇게 하면 \"Too many open files\" 에러가 발생하지 않는다." 

#: ../../rst/installation_guide/intro_installation.rst:55
msgid ""
"Please note that some modules and plugins have additional requirements. "
"For modules these need to be satisfied on the 'target' machine and should"
" be listed in the module specific docs."
msgstr ""
"몇몇 모듈과 플러그인은 추가 설치사항이 있다. 타겟 머신에서의 요구사항이 있는 "
"모듈은 각 모듈의 문서를 참조하라."

#: ../../rst/installation_guide/intro_installation.rst:60
msgid "Managed Node Requirements"
msgstr ""
"관리되는 노드(원격 머신)의 요구사항"

#: ../../rst/installation_guide/intro_installation.rst:62
msgid ""
"On the managed nodes, you need a way to communicate, which is normally "
"ssh. By default this uses sftp. If that's not available, you can switch "
"to scp in :file:`ansible.cfg`.  You also need Python 2 (version 2.6 or "
"later) or Python 3 (version 3.5 or later)."
msgstr ""
"관리되는 노드는 ssh 통신이 가능해야 한다. 디폴트로 sftp를 사용한다. "
"많약 이게 불가능하면 scp를 사용하도록 :file:`ansible.cfg` 설정을 바꿀 수 있다. "
"여기에도 파이썬이 설치되어 있어야 한다."

#: ../../rst/installation_guide/intro_installation.rst:69
msgid ""
"If you have SELinux enabled on remote nodes, you will also want to "
"install libselinux-python on them before using any copy/file/template "
"related functions in Ansible. You can use the :ref:`yum "
"module<yum_module>` or :ref:`dnf module<dnf_module>` in Ansible to "
"install this package on remote systems that do not have it."
msgstr ""
"만약 원격 노드에 SELinux가 켜져 있으면 copy/file/template 관련 기능을 "
"앤서블에서 사용하기 전에 libselinux-python 패키지를 설치해야 한다. "
":ref:`yum module<yum_module>` 또는 :ref:`dnf module<dnf_module>` 명령을 "
"사용하여 이 패키지를 원격 시스템에 설치할 수 있다." 

#: ../../rst/installation_guide/intro_installation.rst:74
msgid ""
"By default, Ansible uses the python interpreter located at "
":file:`/usr/bin/python` to run its modules.  However, some Linux "
"distributions may only have a Python 3 interpreter installed to "
":file:`/usr/bin/python3` by default.  On those systems, you may see an "
"error like::"
msgstr ""
"디폴트로 앤서블은 파이썬 인터프리터의 경로를 :file:`/usr/bin/python`\ 로 "
"가정한다. 하지만 몇몇 리눅스 배포판은 파이썬 3 인터프리터만 :file:`/usr/bin/python3`\ 로 "
"설치되어 있다. 이런 시스템에서는 다음 에러가 발생한다.::" 

#: ../../rst/installation_guide/intro_installation.rst:80
msgid ""
"you can either set the "
":ref:`ansible_python_interpreter<ansible_python_interpreter>` inventory "
"variable (see :ref:`inventory`) to point at your interpreter or you can "
"install a Python 2 interpreter for modules to use. You will still need to"
" set :ref:`ansible_python_interpreter<ansible_python_interpreter>` if the"
" Python 2 interpreter is not installed to :command:`/usr/bin/python`."
msgstr ""
"이 경우에는 :ref:`ansible_python_interpreter<ansible_python_interpreter>` "
"인벤토리 변수(:ref:`inventory` 참조)가 설치된 파이썬 인터프리터를 가리키도록 "
"설정하거나 그냥 파이썬 2를 원격 머신에 설치할 수도 있다. "
"만약 파이썬 2 인터프리터가 설치되어 있긴 하지만 "
":command:`/usr/bin/python` 경로로 설치되어 있지 않는 경우에도 "
":ref:`ansible_python_interpreter<ansible_python_interpreter>` 설정을 바꿔야 한다."

#: ../../rst/installation_guide/intro_installation.rst:85
msgid ""
"Ansible's \"raw\" module (for executing commands in a quick and dirty "
"way) and the script module don't even need Python installed.  So "
"technically, you can use Ansible to install a compatible version of "
"Python using the :ref:`raw module<raw_module>`, which then allows you to "
"use everything else. For example, if you need to bootstrap Python 2 onto "
"a RHEL-based system, you can install it via"
msgstr ""
"앤서블은 (명령을 직접적으로 실행하는) \"raw\" 모듈이 있어서 파이썬이 설치되어 "
"있지 않는 상황에서도 스크립트를 돌릴 수 있다. 파이썬을 설치하기 위해 "
"`raw module<raw_module>`_ 모듈을 사용할 수도 있고 다른 목적에도 쓸 수 있다. "
"예를 들어 레드햇 기반의 시스템에 파이썬 2를 깔고 싶다면 다음과 같이 설치한다. "

#: ../../rst/installation_guide/intro_installation.rst:98
msgid "Installing the Control Machine"
msgstr "제어 머신 설치"

#: ../../rst/installation_guide/intro_installation.rst:102
msgid "Latest Release via DNF or Yum"
msgstr "DNF, Yum"

#: ../../rst/installation_guide/intro_installation.rst:104
msgid "On Fedora:"
msgstr "페도라:"

#: ../../rst/installation_guide/intro_installation.rst:110
msgid "On RHEL and CentOS:"
msgstr "레드햇, 센트OS:"

#: ../../rst/installation_guide/intro_installation.rst:116
msgid ""
"RPMs for RHEL 7 are available from the `Ansible Engine repository "
"<https://access.redhat.com/articles/3174981>`_."
msgstr ""
"래드햇7용 RPM이 `Ansible Engine repository <https://access.redhat.com/articles/3174981>`_\ 에 "
"있다."

#: ../../rst/installation_guide/intro_installation.rst:118
msgid "To enable the Ansible Engine repository, run the following command:"
msgstr "앤서블 엔진 레포지토리를 활성화하려면 다음 명령을 실행한다.:"

#: ../../rst/installation_guide/intro_installation.rst:124
msgid ""
"RPMs for currently supported versions of RHEL, CentOS, and Fedora are "
"available from `EPEL <https://fedoraproject.org/wiki/EPEL>`_ as well as "
"`releases.ansible.com <https://releases.ansible.com/ansible/rpm>`_."
msgstr ""
"현재 지원하는 레드햇, 센트OS, 페도라용 RPM은 `EPEL <https://fedoraproject.org/wiki/EPEL>`_ 또는 "
"`releases.ansible.com <https://releases.ansible.com/ansible/rpm>`_\ 에 있다."

#: ../../rst/installation_guide/intro_installation.rst:126
msgid ""
"Ansible version 2.4 and later can manage earlier operating systems that "
"contain Python 2.6 or higher."
msgstr ""
"앤서블 버전 2.4 이상은 파이썬 2.6 이상에서 돌아간다."

#: ../../rst/installation_guide/intro_installation.rst:128
msgid ""
"You can also build an RPM yourself. From the root of a checkout or "
"tarball, use the ``make rpm`` command to build an RPM you can distribute "
"and install."
msgstr ""
"RPM을 직접 빌드할 수도 있다. 체크아웃한 루트 디렉토리에서 ``make rpm`` 명령을 "
"실행하면 배포설치용 RPM을 빌드한다."

#: ../../rst/installation_guide/intro_installation.rst:140
msgid "Latest Releases via Apt (Ubuntu)"
msgstr "우분투 Apt"

#: ../../rst/installation_guide/intro_installation.rst:142
msgid ""
"Ubuntu builds are available `in a PPA here "
"<https://launchpad.net/~ansible/+archive/ubuntu/ansible>`_."
msgstr ""
"우분투 버전은 `<https://launchpad.net/~ansible/+archive/ubuntu/ansible>`_ PPA에 있다."

#: ../../rst/installation_guide/intro_installation.rst:144
msgid ""
"To configure the PPA on your machine and install ansible run these "
"commands:"
msgstr ""
"앤서블 설치를 위해 시스템에 PPA를 설정하려면 다음과 같이 한다.:" 

#: ../../rst/installation_guide/intro_installation.rst:153
msgid ""
"On older Ubuntu distributions, \"software-properties-common\" is called "
"\"python-software-properties\". You may want to use ``apt-get`` instead "
"of ``apt`` in older versions."
msgstr ""
"옛날 우분투 버전에서는 \"python-software-properties\" 명령으로 "
"\"software-properties-common\"\ 를 호출했다. 또한 옛날 버전에서는 "
"``apt`` 명령 대신 ``apt-get`` 명령을 사용한다. "

#: ../../rst/installation_guide/intro_installation.rst:155
msgid "Debian/Ubuntu packages can also be built from the source checkout, run:"
msgstr "소스코드에서 데비안/우분투 패키지를 빌드하려면 다음을 실행한다.:"

#: ../../rst/installation_guide/intro_installation.rst:161
msgid ""
"You may also wish to run from source to get the latest, which is covered "
"below."
msgstr ""
"최선 버전용 소스코들 실행하는 방법은 다음과 같다."

#: ../../rst/installation_guide/intro_installation.rst:164
msgid "Latest Releases via Apt (Debian)"
msgstr "데비안 Apt"

#: ../../rst/installation_guide/intro_installation.rst:166
msgid "Debian users may leverage the same source as the Ubuntu PPA."
msgstr "데비안 사용자는 우분투 PPA를 쓸 수 있다."

#: ../../rst/installation_guide/intro_installation.rst:168
msgid "Add the following line to /etc/apt/sources.list:"
msgstr "/etc/apt/sources.list에 다음 한 줄을 추가한다.:"

#: ../../rst/installation_guide/intro_installation.rst:174
msgid "Then run these commands:"
msgstr "그리고 다음 명령을 실행한다.:"

#: ../../rst/installation_guide/intro_installation.rst:182
msgid ""
"This method has been verified with the Trusty sources in Debian Jessie "
"and Stretch but may not be supported in earlier versions. You may want to"
" use ``apt-get`` instead of ``apt`` in older versions."
msgstr ""
"이 방법은 데비안 Jessie Stretch의 Trusty 소스로 검증했지만 더 옛날 버전에서는 "
"동작하지 않을 수도 있다. 옛날 버전에서는 ``apt`` 명령 대신 ``apt-get`` 명령을 사용한다."

#: ../../rst/installation_guide/intro_installation.rst:185
msgid "Latest Releases via Portage (Gentoo)"
msgstr "젠투 Portage"

#: ../../rst/installation_guide/intro_installation.rst:191
msgid ""
"To install the newest version, you may need to unmask the ansible package"
" prior to emerging:"
msgstr ""
"새 버전을 설치하려면 앤서블 패키지를 unmask해야 한다.:"

#: ../../rst/installation_guide/intro_installation.rst:198
msgid "Latest Releases via pkg (FreeBSD)"
msgstr "FreeBSD pkg"

#: ../../rst/installation_guide/intro_installation.rst:200
msgid ""
"Though Ansible works with both Python 2 and 3 versions, FreeBSD has "
"different packages for each Python version. So to install you can use:"
msgstr ""
"앤서블 자체는 파이썬 2, 3에서 모두 돌아가지만 FreeBSD는 파이썬 버전에 따라 "
"패키지를 따로 관리하므로 다음처럼 설치한다.:"

#: ../../rst/installation_guide/intro_installation.rst:207
msgid "or:"
msgstr "또는:"

#: ../../rst/installation_guide/intro_installation.rst:214
msgid "You may also wish to install from ports, run:"
msgstr "ports에서 설치하려면:"

#: ../../rst/installation_guide/intro_installation.rst:220
msgid "You can also choose a specific version, i.e  ``ansible25``."
msgstr " ``ansible25``\ 처럼 특정 버전을 선택할 수도 있다."

#: ../../rst/installation_guide/intro_installation.rst:222
msgid ""
"Older versions of FreeBSD worked with something like this (substitute for"
" your choice of package manager):"
msgstr ""
"옛날 버전 FreeBSD에서는:"

#: ../../rst/installation_guide/intro_installation.rst:231
msgid "Latest Releases on macOS"
msgstr "맥OS"

#: ../../rst/installation_guide/intro_installation.rst:233
msgid "The preferred way to install Ansible on a Mac is via pip."
msgstr "맥에서는 pip로 앤서블을 설치하는 것을 추천한다."

#: ../../rst/installation_guide/intro_installation.rst:235
msgid ""
"The instructions can be found in `Latest Releases via Pip`_ section. If "
"you are running macOS version 10.12 or older, then you ought to upgrade "
"to the latest pip (9.0.3 or newer) to connect to the Python Package Index"
" securely."
msgstr ""
"`Latest Releases via Pip`_ 부분을 참조하라. "
"만약 맥OS 10.12 이하 버전을 사용한다면 pip를 9.0.3 이상으로 업그레이드 해야 한다. 

#: ../../rst/installation_guide/intro_installation.rst:240
msgid "Latest Releases via OpenCSW (Solaris)"
msgstr "솔라리스 OpenCSW"

#: ../../rst/installation_guide/intro_installation.rst:242
msgid ""
"Ansible is available for Solaris as `SysV package from OpenCSW "
"<https://www.opencsw.org/packages/ansible/>`_."
msgstr ""
"솔라리스용 앤서블은 `SysV package from OpenCSW "
"<https://www.opencsw.org/packages/ansible/>`_ 사용."

#: ../../rst/installation_guide/intro_installation.rst:252
msgid "Latest Releases via Pacman (Arch Linux)"
msgstr "Arch 리눅스 Pacman"

#: ../../rst/installation_guide/intro_installation.rst:254
msgid "Ansible is available in the Community repository::"
msgstr "앤서블은 커뮤니티 레포에 있다.:"

#: ../../rst/installation_guide/intro_installation.rst:258
msgid ""
"The AUR has a PKGBUILD for pulling directly from GitHub called `ansible-"
"git <https://aur.archlinux.org/packages/ansible-git>`_."
msgstr ""
"깃헙 `ansible-git <https://aur.archlinux.org/packages/ansible-git>`_\ 에서 "
"직접 pull하거나 PKGBUILD 사용"

#: ../../rst/installation_guide/intro_installation.rst:260
msgid ""
"Also see the `Ansible <https://wiki.archlinux.org/index.php/Ansible>`_ "
"page on the ArchWiki."
msgstr ""
"ArchWiki의 `Ansible <https://wiki.archlinux.org/index.php/Ansible>`_ 항목 참조"

#: ../../rst/installation_guide/intro_installation.rst:265
msgid "Latest Releases via sbopkg (Slackware Linux)"
msgstr "슬랙웨어 리눅스 sbopkg"

#: ../../rst/installation_guide/intro_installation.rst:267
msgid ""
"Ansible build script is available in the `SlackBuilds.org "
"<https://slackbuilds.org/apps/ansible/>`_ repository. Can be built and "
"installed using `sbopkg <https://sbopkg.org/>`_."
msgstr ""
"`SlackBuilds.org <https://slackbuilds.org/apps/ansible/>`_ 레포지토리에 "
"앤서블 빌드 스크립트가 있다. `sbopkg <https://sbopkg.org/>`_\ 를 이용하여 "
"빌드할 수 있다."

#: ../../rst/installation_guide/intro_installation.rst:270
msgid "Create queue with Ansible and all dependencies::"
msgstr "앤서블과 앤서블이 의존하는 라이브러리들에 대한 queue는 다음과 같이 만든다::"

#: ../../rst/installation_guide/intro_installation.rst:274
msgid ""
"Build and install packages from created queuefile (answer Q for question "
"if sbopkg should use queue or package)::"
msgstr ""
"생성된 queuefile로부터 패키지를 빌드하고 설치한다.(만약 sbopkg가 queue 또는 "
package를 사용하느가는 질문이 나오면 Q라고 답한다.)::"

#: ../../rst/installation_guide/intro_installation.rst:281
msgid "Latest Release via swupd (Clear Linux)"
msgstr "Clear 리눅스 swupd"

#: ../../rst/installation_guide/intro_installation.rst:283
msgid ""
"Ansible and its dependencies are available as part of the sysadmin host "
"management bundle::"
msgstr ""
"앤서블과 앤서블이 의존하는 라이브러리는 sysadmin 호스트 관리 번들에 포함되어 있다.::"

#: ../../rst/installation_guide/intro_installation.rst:287
msgid "Update of the software will be managed by the swupd tool::"
msgstr "swupd 도구로 소프트웨어 업데이트를 할 수 있다::"

#: ../../rst/installation_guide/intro_installation.rst:294
msgid "Latest Releases via Pip"
msgstr "Pip를 사용한 최신 버전 설치"

#: ../../rst/installation_guide/intro_installation.rst:296
msgid ""
"Ansible can be installed via \"pip\", the Python package manager.  If "
"'pip' isn't already available in your version of Python, you can get pip "
"by::"
msgstr ""
"파이썬 패키지 매니저인 \"pip\"\ 를 사용하면 최신버전 앤서블을 설치할 수 있다. "
"만약 현재 파이썬에 'pip'\ 가 없으면 다음처럼 설치한다.::" 

#: ../../rst/installation_guide/intro_installation.rst:301
msgid "Then install Ansible with [1]_::"
msgstr "[1]_\ 로 앤서블을 설치::"

#: ../../rst/installation_guide/intro_installation.rst:305
msgid "Or if you are looking for the latest development version::"
msgstr "아니면 최신 개발 버전을 설치::"

#: ../../rst/installation_guide/intro_installation.rst:309
msgid ""
"If you are installing on macOS Mavericks, you may encounter some noise "
"from your compiler.  A workaround is to do the following::"
msgstr ""
"만약 맥OS 매버릭에서 설치하려면 컴파일러가 경고를 밷을 수도 있다. "
"다음처럼 하면 피할 수 있다.::"

#: ../../rst/installation_guide/intro_installation.rst:313
msgid ""
"Readers that use virtualenv can also install Ansible under virtualenv, "
"though we'd recommend to not worry about it and just install Ansible "
"globally. Do not use easy_install to install Ansible directly."
msgstr ""
"virtualenv를 사용하는 독자는 virtualenv아래에만 앤서블을 설치할 수도 있다. "
"하지만 권장하는 방식은 아니다. 되도록 앤서블을 글로벌로 설치하라. "
"앤서블을 설치할 때는 easy_install 명령은 사용하지 말아라."

#: ../../rst/installation_guide/intro_installation.rst:317
msgid ""
"Older versions of pip defaults to http://pypi.python.org/simple, which no"
" longer works. Please make sure you have an updated pip (version 10 or "
"greater) installed before installing Ansible. Refer `here "
"<https://pip.pypa.io/en/stable/installing/#installation>`_ about "
"installing latest pip."
msgstr ""
"옛날 버전의 pip는 http://pypi.python.org/simple\ 에 있어도 더이상 사용할 수 없다. "
"앤서블을 설치하기 전에 (버전 10 이상의) 최신 버전 pip인지 확인하라. "
"pip 버전을 확인하려면 `여기 <https://pip.pypa.io/en/stable/installing/#installation>`_\ 를 참조한다."

#: ../../rst/installation_guide/intro_installation.rst:324
msgid "Tarballs of Tagged Releases"
msgstr "태그 버전의 타볼(tarball) 설치"

#: ../../rst/installation_guide/intro_installation.rst:326
msgid ""
"Packaging Ansible or wanting to build a local package yourself, but don't"
" want to do a git checkout?  Tarballs of releases are available on the "
"`Ansible downloads <https://releases.ansible.com/ansible>`_ page."
msgstr ""
"앤서블을 패키징하거나 자신만 쓰는 로컬 빌드를 원하지만 git 체크아웃은 하고 싶지 않다면 "
"`앤서블 다운로드 <https://releases.ansible.com/ansible>`_  페이지에 있는 "
"타볼을 이용하라. "

#: ../../rst/installation_guide/intro_installation.rst:328
msgid ""
"These releases are also tagged in the `git repository "
"<https://github.com/ansible/ansible/releases>`_ with the release version."
msgstr ""
"이 버전들은 `git repository <https://github.com/ansible/ansible/releases>`_\ 에 "
"태그되어 있다."

#: ../../rst/installation_guide/intro_installation.rst:336
msgid "Running From Source"
msgstr "소스코드에서 바로 실행"

#: ../../rst/installation_guide/intro_installation.rst:338
msgid ""
"Ansible is easy to run from a checkout - root permissions are not "
"required to use it and there is no software to actually install.  No "
"daemons or database setup are required.  Because of this, many users in "
"our community use the development version of Ansible all of the time so "
"they can take advantage of new features when they are implemented and "
"easily contribute to the project. Because there is nothing to install, "
"following the development version is significantly easier than most open "
"source projects."
msgstr ""
"앤서블은 체크아웃해서 바로 사용할 수 있다. 사용하는데 루트 권한이 필요하지도 않고 "
"추가로 소프트웨어를 설치할 필요도 없다. 데몬이나 데이터베이스도 필요없다. 따라서 "
"컴뮤니티의 많은 사용자들은 앤서블 개발 버전을 통해 새로운 기능을 즐기고 프로젝트에 "
"기여한다. 설치할 것이 없기 때문에 대부분의 다른 오픈소스 프로젝트보다도 개발버전 "
"사용이 쉽다." 

#: ../../rst/installation_guide/intro_installation.rst:348
msgid ""
"If you are intending to use Tower as the Control Machine, do not use a "
"source install. Please use OS package manager (like ``apt/yum``) or "
"``pip`` to install a stable version."
msgstr ""
"만약 타워(Tower)를 제어 기계로 사용하고 있다면 소스코드 설치를 하지 말아라. "
"운영체제에서 제공하는 (``apt/yum`` 같은) 프로젝트 관리자나 ``pip``\ 로 "
"안정 버전을 설치하라."

#: ../../rst/installation_guide/intro_installation.rst:351
msgid "To install from source, clone the Ansible git repository:"
msgstr "소스코드에서 설치하려면 앤서블 git 레포를 클론한다:"

#: ../../rst/installation_guide/intro_installation.rst:358
msgid "Once git has cloned the Ansible repository, setup the Ansible environment:"
msgstr "일단 앤서블 레포를 클론한 다음에는 앤서블 환경을 설정한다.::"

#: ../../rst/installation_guide/intro_installation.rst:360
msgid "Using Bash:"
msgstr "배쉬셸을 사용하는 경우:"

#: ../../rst/installation_guide/intro_installation.rst:366
msgid "Using Fish::"
msgstr "피쉬셸을 사용하는 경우::"

#: ../../rst/installation_guide/intro_installation.rst:370
msgid "If you want to suppress spurious warnings/errors, use::"
msgstr "만약 쓸데없는 경고/에러가 보이지 않게 하고 싶으면::"

#: ../../rst/installation_guide/intro_installation.rst:374
msgid "If you don't have pip installed in your version of Python, install pip::"
msgstr "만약 현재 파이썬에 pip가 없으면 pip를 설치한다.::"

#: ../../rst/installation_guide/intro_installation.rst:378
msgid ""
"Ansible also uses the following Python modules that need to be installed "
"[1]_:"
msgstr ""
"앤서블은 다음 파이썬 모듈이 있어야 설치된다 [1]_:"

#: ../../rst/installation_guide/intro_installation.rst:384
msgid ""
"To update ansible checkouts, use pull-with-rebase so any local changes "
"are replayed."
msgstr ""
"앤서블 체크아웃을 업데이트하려면 pull-with-rebase를 사용하여 변화 내용을 반영한다."

#: ../../rst/installation_guide/intro_installation.rst:390
msgid ""
"Note: when updating Ansible checkouts that are v2.2 and older, be sure to"
" not only update the source tree, but also the \"submodules\" in git "
"which point at Ansible's own modules."
msgstr ""
"주의: 버전 2.2 이하의 앤서블 체크아웃을 업데이트할 때는 소스 트리만 업데이트하지 말고 "
"앤서블 모듈에 대한 \"submodules\"\ 도 없데이트 한다." 

#: ../../rst/installation_guide/intro_installation.rst:399
msgid ""
"Once running the env-setup script you'll be running from checkout and the"
" default inventory file will be /etc/ansible/hosts.  You can optionally "
"specify an inventory file (see :ref:`inventory`) other than "
"/etc/ansible/hosts:"
msgstr ""
"일단 체크아웃해서 환경 설정 스크립트를 돌리면 디폴트 인벤토리 파일이 /etc/ansible/hosts\ 에 있다. "
"츄거족욿 인벤토리 파일을 지정할 수 있다. 추가적으로 인벤토리 파일 위치를 지저하면 된다.:"

#: ../../rst/installation_guide/intro_installation.rst:408
msgid "You can read more about the inventory file in later parts of the manual."
msgstr "매뉴얼 뒷부분에서 인벤토리 파일에 대해 더 많은 설명을 읽을 수 있다."

#: ../../rst/installation_guide/intro_installation.rst:410
msgid "Now let's test things with a ping command:"
msgstr "이제 ping 명령이 되는지 테스트하자:"

#: ../../rst/installation_guide/intro_installation.rst:416
msgid "You can also use \"sudo make install\"."
msgstr "\"sudo make install\" 명령을 사용할 수도 있다."

#: ../../rst/installation_guide/intro_installation.rst:421
msgid "Ansible on GitHub"
msgstr "Github"

#: ../../rst/installation_guide/intro_installation.rst:423
msgid ""
"You may also wish to follow the `GitHub project "
"<https://github.com/ansible/ansible>`_ if you have a GitHub account.  "
"This is also where we keep the issue tracker for sharing bugs and feature"
" ideas."
msgstr ""
"만약 Github 계쩡이 있다면 "
"`Github 프로젝트 <https://github.com/ansible/ansible>`_\ 를 팔로우할 수도 있다. "
"버그 정보나 기능 추가를 위한 이슈관리를 사용할 수 있다.

#: ../../rst/installation_guide/intro_installation.rst:430
msgid ":ref:`intro_adhoc`"
msgstr ""

#: ../../rst/installation_guide/intro_installation.rst:431
msgid "Examples of basic commands"
msgstr "기본적 명령의 예"

#: ../../rst/installation_guide/intro_installation.rst:432
msgid ":ref:`working_with_playbooks`"
msgstr ""

#: ../../rst/installation_guide/intro_installation.rst:433
msgid "Learning ansible's configuration management language"
msgstr "앤서블 설정관리 언어 학습"

#: ../../rst/installation_guide/intro_installation.rst:434
msgid ":ref:`installation_faqs`"
msgstr ""

#: ../../rst/installation_guide/intro_installation.rst:435
msgid "Ansible Installation related to FAQs"
msgstr "앤서블 설치 관련 FAQ"

#: ../../rst/installation_guide/intro_installation.rst:436
msgid "`Mailing List <https://groups.google.com/group/ansible-project>`_"
msgstr "`메일링 리스트 <https://groups.google.com/group/ansible-project>`_"

#: ../../rst/installation_guide/intro_installation.rst:437
msgid "Questions? Help? Ideas?  Stop by the list on Google Groups"
msgstr "질문 및 도움말은 구글 그룹을 참조한다."

#: ../../rst/installation_guide/intro_installation.rst:438
msgid "`irc.freenode.net <http://irc.freenode.net>`_"
msgstr ""

#: ../../rst/installation_guide/intro_installation.rst:439
msgid "#ansible IRC chat channel"
msgstr "#ansible IRC 채널"

#: ../../rst/installation_guide/intro_installation.rst:441
msgid ""
"If you have issues with the \"pycrypto\" package install on macOS, then "
"you may need to try ``CC=clang sudo -E pip install pycrypto``."
msgstr ""
"만약 맥OS에서 \"pycrypto\" 패키지에 문제가 있으면 "
" ``CC=clang sudo -E pip install pycrypto`` 명령을 시도해 본다." 

