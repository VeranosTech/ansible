# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019 Red Hat, Inc.
# This file is distributed under the same license as the Ansible package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible devel\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-30 11:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/user_guide/windows_performance.rst:4
msgid "Windows performance"
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:5
msgid ""
"This document offers some performance optimizations you might like to "
"apply to your Windows hosts to speed them up specifically in the context "
"of using Ansible with them, and generally."
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:10
msgid "Optimise PowerShell performance to reduce Ansible task overhead"
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:11
msgid ""
"To speed up the startup of PowerShell by around 10x, run the following "
"PowerShell snippet in an Administrator session. Expect it to take tens of"
" seconds."
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:17
msgid ""
"If native images have already been created by the ngen task or service, "
"you will observe no difference in performance (but this snippet will at "
"that point execute faster than otherwise)."
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:42
msgid ""
"PowerShell is used by every Windows Ansible module. This optimisation "
"reduces the time PowerShell takes to start up, removing that overhead "
"from every invocation."
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:45
msgid ""
"This snippet uses `the native image generator, ngen "
"<https://docs.microsoft.com/en-us/dotnet/framework/tools/ngen-exe-native-"
"image-generator#WhenToUse>`_ to pre-emptively create native images for "
"the assemblies that PowerShell relies on."
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:49
msgid "Fix high-CPU-on-boot for VMs/cloud instances"
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:50
msgid ""
"If you are creating golden images to spawn instances from, you can avoid "
"a disruptive high CPU task near startup via `processing the ngen queue "
"<https://docs.microsoft.com/en-us/dotnet/framework/tools/ngen-exe-native-"
"image-generator#native-image-service>`_ within your golden image "
"creation, if you know the CPU types won't change between golden image "
"build process and runtime."
msgstr ""

#: ../../rst/user_guide/windows_performance.rst:55
msgid ""
"Place the following near the end of your playbook, bearing in mind the "
"factors that can cause native images to be invalidated (`see MSDN "
"<https://docs.microsoft.com/en-us/dotnet/framework/tools/ngen-exe-native-"
"image-generator#native-images-and-jit-compilation>`_)."
msgstr ""

