# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018 Ansible, Inc
# This file is distributed under the same license as the Ansible
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Documentation 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-30 11:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:5
msgid "Network Debug and Troubleshooting Guide"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:12
msgid "Introduction"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:14
msgid ""
"Starting with Ansible version 2.1, you can now use the familiar Ansible "
"models of playbook authoring and module development to manage "
"heterogeneous networking devices. Ansible supports a growing number of "
"network devices using both CLI over SSH and API (when available) "
"transports."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:16
msgid ""
"This section discusses how to debug and troubleshoot network modules in "
"Ansible 2.3."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:21
msgid "How to troubleshoot"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:23
msgid "This section covers troubleshooting issues with Network Modules."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:25
msgid "Errors generally fall into one of the following categories:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst
msgid "Authentication issues"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:28
msgid "Not correctly specifying credentials"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:29
msgid ""
"Remote device (network switch/router) not falling back to other other "
"authentication methods"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:30
msgid "SSH key issues"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:442
msgid "Timeout issues"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:32
msgid "Can occur when trying to pull a large amount of data"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:33
msgid "May actually be masking a authentication issue"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:606
msgid "Playbook issues"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:35
msgid ""
"Use of ``delegate_to``, instead of ``ProxyCommand``. See :ref:`network "
"proxy guide <network_delegate_to_vs_ProxyCommand>` for more information."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:37
msgid "``unable to open shell``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:39
msgid ""
"The ``unable to open shell`` message is new in Ansible 2.3, it means that"
" the ``ansible-connection`` daemon has not been able to successfully talk"
" to the remote network device. This generally means that there is an "
"authentication issue. See the \"Authentication and connection issues\" "
"section in this document for more information."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:46
msgid "Enabling Networking logging and how to read the logfile"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:48
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:105
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:162
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:203
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:259
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:297
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:324
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:429
msgid "**Platforms:** Any"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:50
msgid ""
"Ansible 2.3 features improved logging to help diagnose and troubleshoot "
"issues regarding Ansible Networking modules."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:52
msgid ""
"Because logging is very verbose it is disabled by default. It can be "
"enabled via the :envvar:`ANSIBLE_LOG_PATH` and :envvar:`ANSIBLE_DEBUG` "
"options on the ansible-controller, that is the machine running ansible-"
"playbook."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:54
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:119
msgid ""
"Before running ``ansible-playbook`` run the following commands to enable "
"logging::"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:64
msgid ""
"After Ansible has finished running you can inspect the log file which has"
" been created on the ansible-controller:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:82
msgid "From the log notice:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:84
msgid "``p=28990`` Is the PID (Process ID) of the ``ansible-connection`` process"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:85
msgid ""
"``u=fred`` Is the user `running` ansible, not the remote-user you are "
"attempting to connect as"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:86
msgid ""
"``creating new control socket for host veos01:22 as user admin`` "
"host:port as user"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:87
msgid ""
"``control socket path is`` location on disk where the persistent "
"connection socket is created"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:88
msgid ""
"``using connection plugin network_cli`` Informs you that persistent "
"connection is being used"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:89
msgid ""
"``connection established to veos01 in 0:00:22.580626`` Time taken to "
"obtain a shell on the remote device"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:97
msgid ""
"Because the log files are verbose, you can use grep to look for specific "
"information. For example, once you have identified the ``pid`` from the "
"``creating new control socket for host`` line you can search for other "
"connection log entries::"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:103
msgid "Enabling Networking device interaction logging"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:107
msgid ""
"Ansible 2.8 features added logging of device interaction in log file to "
"help diagnose and troubleshoot issues regarding Ansible Networking "
"modules. The messages are logged in file pointed by ``log_path`` "
"configuration option in Ansible configuration file or by set "
":envvar:`ANSIBLE_LOG_PATH` as mentioned in above section."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:112
msgid ""
"The device interaction messages consist of command executed on target "
"device and the returned response, as this log data can contain sensitive "
"information including passwords in plain text it is disabled by default. "
"Additionally, in order to prevent accidental leakage of data, a warning "
"will be shown on every task with this setting enabled specifying which "
"host has it enabled and where the data is being logged."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:117
msgid ""
"Be sure to fully understand the security implications of enabling this "
"option. The device interaction logging can be enabled either globally by "
"setting in configuration file or by setting environment or enabled on per"
" task basis by passing special variable to task."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:125
msgid "Enable device interaction logging for a given task"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:137
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:792
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:859
msgid ""
"To make this a global setting, add the following to your ``ansible.cfg`` "
"file:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:144
msgid "or enable environment variable `ANSIBLE_PERSISTENT_LOG_MESSAGES`"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:146
msgid ""
"# Enable device interaction logging export "
"ANSIBLE_PERSISTENT_LOG_MESSAGES=True"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:149
msgid ""
"If the task is failing at the time on connection initialization itself it"
" is recommended to enable this option globally else if an individual task"
" is failing intermittently this option can be enabled for that task "
"itself to find the root cause."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:153
msgid ""
"After Ansible has finished running you can inspect the log file which has"
" been created on the ansible-controller"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:155
msgid ""
"Be sure to fully understand the security implications of enabling this "
"option as it can log sensitive information in log file thus creating "
"security vulnerability."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:160
msgid "Isolating an error"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:164
msgid ""
"As with any effort to troubleshoot it's important to simplify the test "
"case as much as possible."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:166
msgid ""
"For Ansible this can be done by ensuring you are only running against one"
" remote device:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:168
msgid "Using ``ansible-playbook --limit switch1.example.net...``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:169
msgid "Using an ad-hoc ``ansible`` command"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:171
msgid ""
"`ad-hoc` refers to running Ansible to perform some quick command using "
"``/usr/bin/ansible``, rather than the orchestration language, which is "
"``/usr/bin/ansible-playbook``. In this case we can ensure connectivity by"
" attempting to execute a single command on the remote device::"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:175
msgid "In the above example, we:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:177
msgid ""
"connect to ``switch1.example.net`` specified in the inventory file "
"``inventory``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:178
msgid "use the module ``eos_command``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:179
msgid "run the command ``?``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:180
msgid "connect using the username ``admin``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:181
msgid "inform ansible to prompt for the ssh password by specifying ``-k``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:183
msgid ""
"If you have SSH keys configured correctly, you don't need to specify the "
"``-k`` parameter"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:185
msgid ""
"If the connection still fails you can combine it with the "
"enable_network_logging parameter. For example::"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:194
msgid ""
"Then review the log file and find the relevant error message in the rest "
"of this document."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:201
msgid "Category \"socket_path issue\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:205
msgid ""
"The ``socket_path does not exist or cannot be found``  and ``unable to "
"connect to socket`` messages are new in Ansible 2.5. These messages "
"indicate that the socket used to communicate with the remote network "
"device is unavailable or does not exist."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:208
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:265
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:301
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:330
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:361
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:408
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:617
msgid "For example:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:221
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:244
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:381
msgid "or"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:234
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:286
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:312
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:338
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:372
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:422
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:453
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:479
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:505
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:519
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:545
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:629
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:831
msgid "Suggestions to resolve:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:236
msgid ""
"Follow the steps detailed in :ref:`enable network logging "
"<enable_network_logging>`."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:238
msgid "If the identified error message from the log file is:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:250
msgid "Follow the steps detailed in :ref:`timeout issues <timeout_issues>`"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:256
msgid "Category \"Unable to open shell\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:261
msgid ""
"The ``unable to open shell`` message is new in Ansible 2.3. This message "
"means that the ``ansible-connection`` daemon has not been able to "
"successfully talk to the remote network device. This generally means that"
" there is an authentication issue. It is a \"catch all\" message, meaning"
" you need to enable :ref:logging`a_note_about_logging` to find the "
"underlying issues."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:273
msgid "or:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:288
msgid "Follow the steps detailed in enable_network_logging_."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:290
msgid ""
"Once you've identified the error message from the log file, the specific "
"solution can be found in the rest of this document."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:295
msgid "Error: \"[Errno -2] Name or service not known\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:299
msgid ""
"Indicates that the remote host you are trying to connect to can not be "
"reached"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:314
msgid ""
"If you are using the ``provider:`` options ensure that its suboption "
"``host:`` is set correctly."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:315
msgid ""
"If you are not using ``provider:`` nor top-level arguments ensure your "
"inventory file is correct."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:322
msgid "Error: \"Authentication failed\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:326
msgid ""
"Occurs if the credentials (username, passwords, or ssh keys) passed to "
"``ansible-connection`` (via ``ansible`` or ``ansible-playbook``) can not "
"be used to connect to the remote device."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:340
msgid ""
"If you are specifying credentials via ``password:`` (either directly or "
"via ``provider:``) or the environment variable `ANSIBLE_NET_PASSWORD` it "
"is possible that ``paramiko`` (the Python SSH library that Ansible uses) "
"is using ssh keys, and therefore the credentials you are specifying are "
"being ignored. To find out if this is the case, disable \"look for "
"keys\". This can be done like this:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:346
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:461
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:488
#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:556
msgid ""
"To make this a permanent change, add the following to your "
"``ansible.cfg`` file:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:355
msgid ""
"Error: \"connecting to host <hostname> returned an error\" or \"Bad "
"address\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:357
msgid ""
"This may occur if the SSH fingerprint hasn't been added to Paramiko's "
"(the Python SSH library) know hosts file."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:359
msgid ""
"When using persistent connections with Paramiko, the connection runs in a"
" background process.  If the host doesn't already have a valid SSH key, "
"by default Ansible will prompt to add the host key.  This will cause "
"connections running in background processes to fail."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:374
msgid ""
"Use ``ssh-keyscan`` to pre-populate the known_hosts. You need to ensure "
"the keys are correct."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:383
msgid "You can tell Ansible to automatically accept the keys"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:385
msgid "Environment variable method::"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:390
msgid "``ansible.cfg`` method:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:392
msgid "ansible.cfg"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:406
msgid "Error: \"No authentication methods available\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:424
msgid "No password or SSH key supplied"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:427
msgid "Clearing Out Persistent Connections"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:431
msgid ""
"In Ansible 2.3, persistent connection sockets are stored in "
"``~/.ansible/pc`` for all network devices.  When an Ansible playbook "
"runs, the persistent socket connection is displayed when verbose output "
"is specified."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:433
msgid "``<switch> socket_path: /home/fred/.ansible/pc/f64ddfa760``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:435
msgid ""
"To clear out a persistent connection before it times out (the default "
"timeout is 30 seconds of inactivity), simple delete the socket file."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:445
msgid "Persistent connection idle timeout"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:447
msgid ""
"By default, ``ANSIBLE_PERSISTENT_CONNECT_TIMEOUT`` is set to 30 "
"(seconds). You may see the following error if this value is too low:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:455
msgid "Increase value of persistent connection idle timeout:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:469
msgid "Command timeout"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:471
msgid ""
"By default, ``ANSIBLE_PERSISTENT_COMMAND_TIMEOUT`` is set to 30 "
"(seconds). Prior versions of Ansible had this value set to 10 seconds by "
"default. You may see the following error if this value is too low:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:481
msgid ""
"Option 1 (Global command timeout setting): Increase value of command "
"timeout in configuration file or by setting environment variable."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:495
msgid ""
"Option 2 (Per task command timeout setting): Increase command timeout per"
" task basis. All network modules support a timeout value that can be set "
"on a per task basis. The timeout value controls the amount of time in "
"seconds before the task will fail if the command has not returned."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:501
msgid "For local connection type:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:515
msgid "For network_cli, netconf connection type (applicable from 2.7 onwards):"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:529
msgid ""
"Some operations take longer than the default 30 seconds to complete.  One"
" good example is saving the current running config on IOS devices to "
"startup config. In this case, changing the timeout value from the default"
" 30 seconds to 60 seconds will prevent the task from failing before the "
"command completes successfully."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:536
msgid "Persistent connection retry timeout"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:538
msgid ""
"By default, ``ANSIBLE_PERSISTENT_CONNECT_RETRY_TIMEOUT`` is set to 15 "
"(seconds). You may see the following error if this value is too low:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:547
msgid ""
"Increase the value of the persistent connection idle timeout. Note: This "
"value should be greater than the SSH timeout value (the timeout value "
"under the defaults section in the configuration file) and less than the "
"value of the persistent connection idle timeout (connect_timeout)."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:565
msgid ""
"Timeout issue due to platform specific login menu with ``network_cli`` "
"connection type"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:567
msgid ""
"In Ansible 2.9 and later, the network_cli connection plugin configuration"
" options are added to handle the platform specific login menu. These "
"options can be set as group/host or tasks variables."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:571
msgid "Example: Handle single login menu prompts with host variables"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:582
msgid ""
"Example: Handle remote host multiple login menu prompts with host "
"variables"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:596
msgid "To handle multiple login menu prompts:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:598
msgid ""
"The values of ``ansible_terminal_initial_prompt`` and "
"``ansible_terminal_initial_answer`` should be a list."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:599
msgid "The prompt sequence should match the answer sequence."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:600
msgid ""
"The value of ``ansible_terminal_initial_prompt_checkall`` should be set "
"to ``True``."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:602
msgid ""
"If all the prompts in sequence are not received from remote host at the "
"time connection initialization it will result in a timeout."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:608
msgid "This section details issues are caused by issues with the Playbook itself."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:611
msgid "Error: \"Unable to enter configuration mode\""
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:613
msgid "**Platforms:** eos and ios"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:615
msgid ""
"This occurs when you attempt to run a task that requires privileged mode "
"in a user mode shell."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:631
msgid "In Ansible prior to 2.5 : Add ``authorize: yes`` to the task. For example:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:643
msgid ""
"If the user requires a password to go into privileged mode, this can be "
"specified with ``auth_pass``; if ``auth_pass`` isn't set, the environment"
" variable `ANSIBLE_NET_AUTHORIZE` will be used instead."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:646
msgid "Add ``authorize: yes`` to the task. For example:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:659
msgid ""
"Starting with Ansible 2.5 we recommend using ``connection: network_cli`` "
"and ``become: yes``"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:663
msgid "Proxy Issues"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:668
msgid "delegate_to vs ProxyCommand"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:670
msgid ""
"The new connection framework for Network Modules in Ansible 2.3 that uses"
" ``cli`` transport no longer supports the use of the ``delegate_to`` "
"directive. In order to use a bastion or intermediate jump host to connect"
" to network devices over ``cli`` transport, network modules now support "
"the use of ``ProxyCommand``."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:675
msgid ""
"To use ``ProxyCommand``, configure the proxy settings in the Ansible "
"inventory file to specify the proxy host."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:688
msgid ""
"With the configuration above, simply build and run the playbook as normal"
" with no additional changes necessary.  The network module will now "
"connect to the network device by first connecting to the host specified "
"in ``ansible_ssh_common_args``, which is ``bastion01`` in the above "
"example."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:693
msgid ""
"You can also set the proxy target for all hosts by using environment "
"variables."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:700
msgid "Using bastion/jump host with netconf connection"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:703
msgid "Enabling jump host setting"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:709
msgid "Bastion/jump host with netconf connection can be enabled by:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:707
msgid ""
"Setting Ansible variable ``ansible_netconf_ssh_config`` either to "
"``True`` or custom ssh config file path"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:708
msgid ""
"Setting environment variable ``ANSIBLE_NETCONF_SSH_CONFIG`` to ``True`` "
"or custom ssh config file path"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:709
msgid ""
"Setting ``ssh_config = 1`` or ``ssh_config = <ssh-file-path>`` under "
"``netconf_connection`` section"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:711
msgid ""
"If the configuration variable is set to 1 the proxycommand and other ssh "
"variables are read from default ssh config file (~/.ssh/config)."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:714
msgid ""
"If the configuration variable is set to file path the proxycommand and "
"other ssh variables are read from the given custom ssh file path"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:718
msgid "Example ssh config file (~/.ssh/config)"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:745
msgid "Example Ansible inventory file"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:759
msgid "Using ``ProxyCommand`` with passwords via variables"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:761
msgid ""
"By design, SSH doesn't support providing passwords via environment "
"variables. This is done to prevent secrets from leaking out, for example "
"in ``ps`` output."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:764
msgid ""
"We recommend using SSH Keys, and if needed an ssh-agent, rather than "
"passwords, where ever possible."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:767
msgid "Miscellaneous Issues"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:771
msgid "Intermittent failure while using ``network_cli`` connection type"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:773
msgid ""
"If the command prompt received in response is not matched correctly "
"within the ``network_cli`` connection plugin the task might fail "
"intermittently with truncated response or with the error message "
"``operation requires privilege escalation``. Starting in 2.7.1 a new "
"buffer read timer is added to ensure prompts are matched properly and a "
"complete response is send in output. The timer default value is 0.2 "
"seconds and can be adjusted on a per task basis or can be set globally in"
" seconds."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:780
msgid "Example Per task timer setting"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:799
msgid ""
"This timer delay per command executed on remote host can be disabled by "
"setting the value to zero."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:803
msgid ""
"Task failure due to mismatched error regex within command response using "
"``network_cli`` connection type"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:805
msgid ""
"In Ansible 2.9 and later, the network_cli connection plugin configuration"
" options are added to handle the stdout and stderr regex to identify if "
"the command execution response consist of a normal response or an error "
"response. These options can be set group/host variables or as tasks "
"variables."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:810
msgid "Example: For mismatched error response"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:820
msgid "Playbook run output:"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:833
msgid "Modify the error regex for individual task."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:846
msgid ""
"The terminal plugin regex options ``ansible_terminal_stderr_re`` and "
"``ansible_terminal_stdout_re`` have ``pattern`` and ``flags`` as keys. "
"The value of the ``flags`` key should be a value that is accepted by the "
"``re.compile`` python method."
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:852
msgid ""
"Intermittent failure while using ``network_cli`` connection type due to "
"slower network or remote target host"
msgstr ""

#: ../../rst/network/user_guide/network_debug_troubleshooting.rst:854
msgid ""
"In Ansible 2.9 and later, the ``network_cli`` connection plugin "
"configuration option is added to control the number of attempts to "
"connect to a remote host. The default number of attempts is three. After "
"every retry attempt the delay between retries is increased by power of 2 "
"in seconds until either the maximum attempts are exhausted or either the "
"``persistent_command_timeout`` or ``persistent_connect_timeout`` timers "
"are triggered."
msgstr ""

#~ msgid "Not using ``connection: local``"
#~ msgstr ""

#~ msgid ""
#~ "The device interaction messages consist "
#~ "of command executed on target device "
#~ "and the returned response, as this "
#~ "log data can contain sensitive "
#~ "information including passwords in plain "
#~ "text it is disabled by default. "
#~ "Additionally, in order to prevent "
#~ "accidental leakage of data, a warning"
#~ " will be shown on every task "
#~ "with this setting eneabled specifying "
#~ "which host has it enabled and "
#~ "where the data is being logged."
#~ msgstr ""

#~ msgid "Timeouts"
#~ msgstr ""

#~ msgid "Persistent connection idle timeout:"
#~ msgstr ""

#~ msgid "Command timeout: For example:"
#~ msgstr ""

#~ msgid ""
#~ "Options 1 (Global command timeout "
#~ "setting): Increase value of command "
#~ "timeout in configuration file or by "
#~ "setting environment variable."
#~ msgstr ""

#~ msgid ""
#~ "Some operations take longer than the "
#~ "default 10 seconds to complete.  One "
#~ "good example is saving the current "
#~ "running config on IOS devices to "
#~ "startup config. In this case, changing"
#~ " the timeout value from the default"
#~ " 10 seconds to 30 seconds will "
#~ "prevent the task from failing before "
#~ "the command completes successfully."
#~ msgstr ""

#~ msgid "Persistent socket connect timeout: For example:"
#~ msgstr ""

#~ msgid ""
#~ "Error: \"invalid connection specified, "
#~ "expected connection=local, got ssh\""
#~ msgstr ""

#~ msgid ""
#~ "Network modules require that the "
#~ "connection is set to ``local``.  Any "
#~ "other connection setting will cause the"
#~ " playbook to fail.  Ansible will now"
#~ " detect this condition and return an"
#~ " error message:"
#~ msgstr ""

#~ msgid ""
#~ "To fix this issue, set the "
#~ "connection value to ``local`` using one"
#~ " of the following methods:"
#~ msgstr ""

#~ msgid "Set the play to use ``connection: local``"
#~ msgstr ""

#~ msgid "Set the task to use ``connection: local``"
#~ msgstr ""

#~ msgid "Run ansible-playbook using the ``-c local`` setting"
#~ msgstr ""

