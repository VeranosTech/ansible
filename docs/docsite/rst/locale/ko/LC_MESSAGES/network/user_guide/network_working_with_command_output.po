# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018 Ansible, Inc
# This file is distributed under the same license as the Ansible
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Documentation 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-18 15:38+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/network/user_guide/network_working_with_command_output.rst:5
msgid "Working with Command Output in Network Modules"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:8
msgid "Conditionals in Networking Modules"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:10
msgid ""
"Ansible allows you to use conditionals to control the flow of your "
"playbooks. Ansible networking command modules use the following unique "
"conditional statements."
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:12
msgid "``eq`` - Equal"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:13
msgid "``neq`` - Not equal"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:14
msgid "``gt`` - Greater than"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:15
msgid "``ge`` - Greater than or equal"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:16
msgid "``lt`` - Less than"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:17
msgid "``le`` - Less than or equal"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:18
msgid "``contains`` - Object contains specified item"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:21
msgid ""
"Conditional statements evaluate the results from the commands that are "
"executed remotely on the device.  Once the task executes the command set,"
" the ``wait_for`` argument can be used to evaluate the results before "
"returning control to the Ansible playbook."
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:26
msgid "For example::"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:36
msgid ""
"In the above example task, the command :code:`show interface Ethernet4 | "
"json` is executed on the remote device and the results are evaluated.  If"
" the path :code:`(result[0].interfaces.Ethernet4.interfaceStatus)` is not"
" equal to \"connected\", then the command is retried.  This process "
"continues until either the condition is satisfied or the number of "
"retries has expired (by default, this is 10 retries at 1 second "
"intervals)."
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:44
msgid ""
"The commands module can also evaluate more than one set of command "
"results in an interface.  For instance::"
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:57
msgid ""
"In the above example, two commands are executed on the remote device, and"
" the results are evaluated.  By specifying the result index value (0 or "
"1), the correct result output is checked against the conditional."
msgstr ""

#: ../../rst/network/user_guide/network_working_with_command_output.rst:62
msgid ""
"The ``wait_for`` argument must always start with result and then the "
"command index in ``[]``, where ``0`` is the first command in the commands"
" list, ``1`` is the second command, ``2`` is the third and so on."
msgstr ""

