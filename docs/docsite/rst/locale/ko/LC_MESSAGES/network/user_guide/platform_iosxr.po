# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019 Red Hat, Inc.
# This file is distributed under the same license as the Ansible package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible devel\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-30 11:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/network/user_guide/platform_iosxr.rst:5
msgid "IOS-XR Platform Options"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:7
msgid ""
"IOS-XR supports multiple connections. This page offers details on how "
"each connection works in Ansible and how to use it."
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:9
msgid "Topic"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:12
msgid "Connections Available"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:18
msgid "CLI"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:18
msgid "NETCONF"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:20
msgid ""
"only for modules ``iosxr_banner``, ``iosxr_interface``, "
"``iosxr_logging``, ``iosxr_system``, ``iosxr_user``"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:24
msgid "Protocol"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:24
msgid "SSH"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:24
msgid "XML over SSH"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:26
msgid "Credentials"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:26
msgid "uses SSH keys / SSH-agent if present"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:28
msgid "accepts ``-u myuser -k`` if using password"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:30
msgid "Indirect Access"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:30
msgid "via a bastion (jump host)"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:32
msgid "Connection Settings"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:32
msgid "``ansible_connection: network_cli``"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:32
msgid "``ansible_connection: netconf``"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:34
msgid "|enable_mode|"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:34
msgid "not supported"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:36
msgid "Returned Data Format"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:36
msgid "Refer to individual module documentation"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:42
msgid ""
"For legacy playbooks, Ansible still supports ``ansible_connection=local``"
" on all IOS-XR modules. We recommend modernizing to use "
"``ansible_connection=netconf`` or ``ansible_connection=network_cli`` as "
"soon as possible."
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:45
msgid "Using CLI in Ansible"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:48
msgid "Example CLI inventory ``[iosxr:vars]``"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:60
msgid ""
"If you are using SSH keys (including an ssh-agent) you can remove the "
"``ansible_password`` configuration."
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:61
msgid ""
"If you are accessing your host directly (not through a bastion/jump host)"
" you can remove the ``ansible_ssh_common_args`` configuration."
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:62
msgid ""
"If you are accessing your host through a bastion/jump host, you cannot "
"include your SSH password in the ``ProxyCommand`` directive. To prevent "
"secrets from leaking out (for example in ``ps`` output), SSH does not "
"support providing passwords via environment variables."
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:65
msgid "Example CLI Task"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:76
msgid "Using NETCONF in Ansible"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:79
msgid "Enabling NETCONF"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:81
msgid "Before you can use NETCONF to connect to a switch, you must:"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:83
msgid ""
"install the ``ncclient`` python package on your control node(s) with "
"``pip install ncclient``"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:84
msgid "enable NETCONF on the Cisco IOS-XR device(s)"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:86
msgid ""
"To enable NETCONF on a new switch via Ansible, use the ``iosxr_netconf`` "
"module via the CLI connection. Set up your platform-level variables just "
"like in the CLI example above, then run a playbook task like this:"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:95
msgid ""
"Once NETCONF is enabled, change your variables to use the NETCONF "
"connection."
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:98
msgid "Example NETCONF inventory ``[iosxr:vars]``"
msgstr ""

#: ../../rst/network/user_guide/platform_iosxr.rst:111
msgid "Example NETCONF Task"
msgstr ""

#: ../../rst/network/user_guide/shared_snippets/SSH_warning.txt:2
msgid ""
"Never store passwords in plain text. We recommend using SSH keys to "
"authenticate SSH connections. Ansible supports ssh-agent to manage your "
"SSH keys. If you must use passwords to authenticate SSH connections, we "
"recommend encrypting them with :ref:`Ansible Vault <playbooks_vault>`."
msgstr ""

