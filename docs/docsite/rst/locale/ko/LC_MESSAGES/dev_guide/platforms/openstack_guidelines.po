# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019 Red Hat, Inc.
# This file is distributed under the same license as the Ansible package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible devel\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-30 11:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:4
msgid "OpenStack Ansible Modules"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:6
msgid ""
"These are a set of modules for interacting with OpenStack as either an "
"admin or an end user. If the module does not begin with ``os_``, it's "
"either deprecated or soon to be. This document serves as developer coding"
" guidelines for modules intended to be here."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:15
msgid "Naming"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:17
msgid "All module names should start with ``os_``"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:18
msgid ""
"Name any module that a cloud consumer would expect to use after the "
"logical resource it manages: ``os_server`` not ``os_nova``. This naming "
"convention acknowledges that the end user does not care which service "
"manages the resource - that is a deployment detail. For example cloud "
"consumers may not know whether their floating IPs are managed by Nova or "
"Neutron."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:19
msgid ""
"Name any module that a cloud admin would expect to use with the service "
"and the resource: ``os_keystone_domain``."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:20
msgid ""
"If the module is one that a cloud admin and a cloud consumer could both "
"use, the cloud consumer rules apply."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:24
msgid "Interface"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:26
msgid "If the resource being managed has an id, it should be returned."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:27
msgid ""
"If the resource being managed has an associated object more complex than "
"an id, it should also be returned."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:31
msgid "Interoperability"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:33
msgid ""
"It should be assumed that the cloud consumer does not know a bazillion "
"details about the deployment choices their cloud provider made, and a "
"best effort should be made to present one sane interface to the Ansible "
"user regardless of deployer insanity."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:37
msgid ""
"All modules should work appropriately against all existing known public "
"OpenStack clouds."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:39
msgid ""
"It should be assumed that a user may have more than one cloud account "
"that they wish to combine as part of a single Ansible-managed "
"infrastructure."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:43
msgid "Libraries"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:45
msgid ""
"All modules should use ``openstack_full_argument_spec`` to pick up the "
"standard input such as auth and ssl support."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:47
msgid "All modules should include ``extends_documentation_fragment: openstack``."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:48
msgid ""
"All complex cloud interaction or interoperability code should be housed "
"in the `openstacksdk "
"<http://git.openstack.org/cgit/openstack/openstacksdk>`_ library."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:51
msgid ""
"All OpenStack API interactions should happen via the openstacksdk and not"
" via OpenStack Client libraries. The OpenStack Client libraries do no "
"have end users as a primary audience, they are for intra-server "
"communication."
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:56
msgid "Testing"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:58
msgid ""
"Integration testing is currently done in `OpenStack's CI system "
"<https://git.openstack.org/cgit/openstack/openstacksdk/tree/openstack/tests/ansible>`_"
msgstr ""

#: ../../rst/dev_guide/platforms/openstack_guidelines.rst:59
msgid ""
"Testing in openstacksdk produces an obvious chicken-and-egg scenario. "
"Work is under way to trigger from and report on PRs directly."
msgstr ""

