# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018 Ansible, Inc
# This file is distributed under the same license as the Ansible
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ansible Documentation 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-30 11:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rst/dev_guide/testing_sanity.rst:7
msgid "Sanity Tests"
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:9
msgid "Topics"
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:11
msgid ""
"Sanity tests are made up of scripts and tools used to perform static code"
" analysis. The primary purpose of these tests is to enforce Ansible "
"coding standards and requirements."
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:14
msgid ""
"Tests are run with ``ansible-test sanity``. All available tests are run "
"unless the ``--test`` option is used."
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:19
msgid "How to run"
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:38
msgid "Available Tests"
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:40
msgid "Tests can be listed with ``ansible-test sanity --list-tests``."
msgstr ""

#: ../../rst/dev_guide/testing_sanity.rst:42
msgid ""
"See the full list of :ref:`sanity tests <all_sanity_tests>`, which "
"details the various tests and details how to fix identified issues."
msgstr ""

#~ msgid ""
#~ "This list is a combination of two"
#~ " different categories of tests, \"Code "
#~ "Smell\" and \"Built-in\"."
#~ msgstr ""

#~ msgid "Code Smell Tests"
#~ msgstr ""

#~ msgid ""
#~ "Miscellaneous `scripts "
#~ "<https://github.com/ansible/ansible/tree/devel/test/sanity/code-"
#~ "smell/>`_ used for enforcing coding "
#~ "standards and requirements, identifying trip"
#~ " hazards, etc."
#~ msgstr ""

#~ msgid ""
#~ "These tests are listed and accessed "
#~ "by script name. There is no actual"
#~ " test named ``code-smell``."
#~ msgstr ""

#~ msgid ""
#~ "All executable scripts added to the "
#~ "``code-smell`` directory are automatically "
#~ "detected and executed by ``ansible-"
#~ "test``."
#~ msgstr ""

#~ msgid ""
#~ "Scripts in the directory which fail "
#~ "can be skipped by adding them to"
#~ " `skip.txt "
#~ "<https://github.com/ansible/ansible/blob/devel/test/sanity/code-"
#~ "smell/skip.txt>`_. This is useful for "
#~ "scripts which identify issues that have"
#~ " not yet been resolved in the "
#~ "code base."
#~ msgstr ""

#~ msgid ""
#~ "Files tested are specific to the "
#~ "individual test scripts and are not "
#~ "affected by command line arguments."
#~ msgstr ""

#~ msgid "Built-in Tests"
#~ msgstr ""

#~ msgid ""
#~ "These tests are integrated directly into"
#~ " ``ansible-test``. All files relevant "
#~ "to each test are tested unless "
#~ "specific files are specified."
#~ msgstr ""

#~ msgid ""
#~ "A full list of tests can be "
#~ "obtained by doing ``ansible-test sanity"
#~ " --list-tests``."
#~ msgstr ""

#~ msgid "ansible-doc"
#~ msgstr ""

#~ msgid ""
#~ "Verifies that ``ansible-doc`` can parse"
#~ " module documentation on all supported "
#~ "python versions."
#~ msgstr ""

#~ msgid "pep8"
#~ msgstr ""

#~ msgid ""
#~ "Python static analysis for PEP 8 "
#~ "style guideline compliance. See "
#~ ":doc:`testing_pep8` for more information."
#~ msgstr ""

#~ msgid "pylint"
#~ msgstr ""

#~ msgid "Python static analysis for common programming errors."
#~ msgstr ""

#~ msgid "rstcheck"
#~ msgstr ""

#~ msgid "Check reStructuredText files for syntax and formatting issues."
#~ msgstr ""

#~ msgid "shellcheck"
#~ msgstr ""

#~ msgid ""
#~ "Static code analysis for shell scripts"
#~ " using the excellent `shellcheck "
#~ "<https://www.shellcheck.net/>`_ tool."
#~ msgstr ""

#~ msgid "validate-modules"
#~ msgstr ""

#~ msgid ""
#~ "Analyze modules for common issues in "
#~ "code and documentation. See :doc"
#~ ":`testing_validate-modules` for more information."
#~ msgstr ""

#~ msgid "yamllint"
#~ msgstr ""

#~ msgid "Check YAML files for syntax and formatting issues."
#~ msgstr ""

